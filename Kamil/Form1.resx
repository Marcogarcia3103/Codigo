<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAe8AAABmCAMAAADVn+lbAAAABGdBTUEAALGPC/xhBQAAASNQTFRF/90w
        Amau////AWau/9sc//O7//30/985AGWvAGSvAGCyAGGxAGOwAFyqrczjAG6z8vf6/+Aq5+z0/+JMwNTn
        /+qG/+MiAFy05dI5/+Eo6dBImKdxRnmi79Q/8dczRnudWYuJoq1rQX6UAGmpAGymAF60cJaAjJqHjKNz
        4s9AAG6j1spEMneelKR3f5t9SH6ZzsNTubpaZ4yOU4aQcZKHtLdg0sZNgp54nKpurLFow75amqV33s1C
        xsJOAFq2XIKaZ46Ljp2C1eXx//fQS4vBd6LMVo7B//vr/+d0xLtiao6LTYSR0sJb18dSvbhjfJaFGHKg
        SISPLHmYZpGEvb5Tqqx0u7RsPHWlAFG6oq9lT4eMeJt4do+QZYiUDHOcRYeI/+2bURKScAAAFk5JREFU
        eF7tXYtf2zi2Tkadi2yr09HOXRNPiiEkZsiDkEBe0EDpztydbSklpex2211m9///K+7R0/IrxIEAhXy/
        Yse2XtbRJ51zJKuF75Z4SljK+2lhKe+nhaW8nxZCef/lh/vBX2T+DL9+v8Qi8Kus31DeP/72/L7w259k
        Gb5/tsSCUFASV/L+v+eoyBE5ZV/cXgD0/K+iCL8WllgYVn4XlSzl/Sde9/cEJLr0vz2TZVvi9vHse17H
        Wt7P08nHj2kXtxgA4//lZfhJFm2JBeDZn3kdG/K+N2BrKe+FIynvdPIZp0UFWMr7DrDk99PCA+I3Wsp7
        8Vjy+2lhOX4/LSz5/bSw5PfTwlLeTwvL/vxpYcnvp4VHxm9KPQlK5a0lTDwgft/U3wKiLnXelttbG5+2
        hqPDpu8+RpH7GvJGPjwWflO6Mt6+mlQd2+GwSe3ledcvPDaRr12sC7T25hL44xi/qdvcuQhsYmHoJkRy
        CFtOUHzXX/FkmMeBNYtYHM76Lcn73jC3vGmhs48cSzYfE9ghtfLaY5L4GsLi1azbknc6+YzTogLMK2/P
        71mOJrZOTpyQ5bT6j0h3u3153xvmlDetYEfWQSqQFezXH43Anzq/qb9BgNsiBeNkXiCn1n0sAn/i/PbG
        LVuKdgqQRYaujPGN4xHxew77mx5ViZECOyAsgMQlO8AJ2ydzVc+Dw5PmN21WLRlZABOHoBfVavUFYr/k
        XQbkvJORvm085fGbNmuM3ToFy8Ynr/rNEnULpUH/zWbAtHbxCP4FX2W0bxpPmN/UbwhxC1iktV0vUGl7
        wXml2as6UuDwuNrnD75xPGV+nyhpwgnZtQM/5lih3uA04G4YVCSo+yjcLk9X3t5OIHQyHpds0RR5Uvew
        wRoFchqlx+Fle7L9OR1U5ZsDrOqBvB0HrW86CDm740digN8DvzFz10t7JzVA5GL2APnk7e46OgVSHWSy
        l66cBPapnyluOWOuxv3rASFlDHnjWqhJ+RljTC3RXfMbWUF1fXd3veFo5fe2kEveXj/Q2VuNbHEDvI2e
        /BUH9fzx+4Ptra2tduX9wJ9BHpT6zfcHQ4gxPHg/9r1ZYpTO3o/aEKP84ax+7WwdFGkgglfenpWSJbpj
        fmOnMTor+b4/frtBuIEbCxAep9xLD5DL3+JvakcLDg6nV7u/In9EQQuD89eNIOAz5nZQXe91QTryYSoo
        PTrfrdmBmGEParvng+kT7GAkfNlrFVUWZHK1nSLDENS7PF+vquBW6+pLvBHeLb9J9QA6Gh6Rus29IBxB
        bwF5+E372o2KSGUeVczzy41VR/neIRk2X47azey0vNJOIsbqZCdbEaS0cwJCDidqkUXsYPNDVhuh/mgS
        OJauVAgeOOeDSOg75bezbnactNCGzCMBUi5mD5BH3i6nN4/qnE4hTBboyuizzXxz0TJgp7qVMZdG/e2G
        modTJQZYzufRSkaM5kmRGwc8tIqECNk9lCFiOGxB24iGBsui2l4z0r9LfluNerQte+1wEL05csibjtVr
        FzGKEmAmeONNYZjHARJvpBrq3qBlp8ewgt20ToHSUTVdxUHEPk/qj5SeGz2BAWxPBuFkzx3yG6NOopR7
        0kmdDD3tXnqAPPJ+JVwtcHDO5xD3CBuumvDEjsiye8kh1nvFtZVEaHZCpDhKCJyWTtVol4yEnFq8kdL6
        us3Dp4S2SFkL/A757XwSudKC78sujDax4tnNkac/31eeVLSa37Kmo+kLJJy9BP2GZFoMbI/i4itNItM1
        MSASm5GnzZZqgSnA5ECFvhN+g2YCqDZ5pm53n6w2yjx2wd0AK1gFU6eUFGYJkEPea0Xx1qhoXeSe2HZ3
        mLjTyyBOwWm0Lr32ajSAceQn7OxEikHHExBfJHQskoUPTVXInzhGAISxhdlYoEJjWw0yi+c3DGmkMVlf
        r+3xCLRMYFiynE1x9XZKs8yJ2eVNLwMZB9m65c8KWolwlS1kJWxhq/EewHCzg/Z2TK4iHiMaARhYMcvh
        M2eQRmoMqyjow7FyFYaH+nZqk/VJ1TZytdQAsHB+Y7u6dTiu+35TlG8senDklMXlRFyygzrFUjCOUwPM
        bn97I5vHgdJV82prtClqTOSKwUBCf3zcnFgBVK8uEFo1mhE9gv5AFxKDYTz5Y6M1ASvZTMg6MmJscRbI
        OJZj25OLr60ai6GzKJJdLTB3m1mX4pFlVz8dDsZ+fXBwGkgyQbZkU3QgC+Y3ItVhwXQEekNZ1daEezH8
        3eiKgxtgdn57PUWH/G/tr4eTqMjBe/2Sy1Ef7RoKuKn1r03CV8R2480RdV0P/h29aRgOCNLSJfH6xzoh
        iNHaGYgs6OU5qOzyfrEYnMsxgA6UEKFEkxF1eX1T6jZPdAbQAnmXs1h+I6sR8115n1SbC9bYtb+rDWF9
        ilyk3UsPMLu83SspM0Sucg7fXjm0KLCzb/jHPP9Q6kzs4JyqHt1rG+RDw7pu/NSrbyNLPoGiDFWMeks0
        EJ5OrRJ6XSn9uYf5M/YIF5W9s8/LBH8wkJgmLy2UuXjZU0t0B4vlt1UcmwMZwGtLamHC85Pyvg3k4Pdr
        lamzFSvftdBUAnEPo/5v6r8LvXZYNnQ6DufhwIyKZud2mF4mgG0pAG8nXEJpt6IuC+r2wyVYzr64N5Da
        IGgjvZhH3usrAwjZffZoofzGyFQiOeihfBlZ2LV1IhcIzgWWlkgvD7+pkjdy2vnkTcu2HKVBhRI9ZARD
        zWVyKu7Qcz0WkwvT08VB1y50f+G0ZQthXzWJW/Zewnfq8TV3PABa5YMGfSdtHGQnfQl0BKopD024JbJQ
        eas1fmI8Eb8Le1zgluyMmjWwHOYGaK7ybeA4u7wLqlNBQFF5azawaRaZn7OTqFx4yT2QLg+AbGnYiwqG
        e9hKMfU1/cE0nPARjrn2ZRZWq5SM4XUhRRHA6bHSjxsyhVQR0oYcMvCLElwusj9HgSgubfYmjU3FBn/P
        dpyg1heXK6UboaMMK8Bc/Xk+ftMz3dU6UuGNgpY+q+5WJE372vQjKf0B63G12RQIH4pSLqDJpBoP3lAl
        aU3qkMOBLBOyL1OCexWlMHGTb5H8ti74C9LDqmOB4dLmEQCH7U/lRM82F+jPqzwnnt88+ppgyMzwymBd
        8PyyDDkPal8USNhLyhRARSI8DkmIwkAk54T3uEBXkYKjFPAY1lrSEEAWKAneV/kyeJLaAgc1OTxwz/Ei
        +W2/4lVSavEWjLVrg62/EL9uDCZvhRzy3lMUIq/TqzQDru4YiPAeJeEr6ws3mMPBX1d8X834JinsAazP
        EIJ21BwSRmcZMXaUkseGI1fpg84nly9sicL1VY9jXYAFvEB+I+cfrLy0Ilu81Ugv/k1g8juHv2UojQRk
        vcz11rzueH6y702CvlH9pwPko82aqF8Yi7Nyonz8hUi4NoaybasuhFzJAAmUlI5HTl19AfLcSEVV8htX
        oQQL5DdC3CQBi1tc4ypTGG4X8/E7pBROTDRNg5YejJXpa14gTFfVvw3jJX2vrpxeVkZUeX9QERqRri5O
        3nS4ug+puvRI5VC0CIPDj/LMDrLIwuOxQH6DNcblvSVd+YuSt8gwlz3WPOZxmAnD+6AZQY9Y38nys1ry
        VhIlNbgyedH3smUhp5wlPfp35nKESIiAicyHDJ5CkKZ+cag2gZDj0gMlb5ktP6ZdFFdBu1skv0Vd0g+y
        gyO7ucbKmTAfvwu+NGGgUNAjzgzaVVWnrOsUuKpGnU+e4al3uLsjDfSD8orbfwd5v1QDfmBMiETB1UYG
        5JS0/n09WANaIL+L0kL113mJMJFDHuXgP2+M+fjNPi2RkVCQ47WFvFl+2b2zljdyNkDeoWQy2RqmquXN
        X2k1a8jQrQj4DfKemd9BZxHyDoEbwh4rXQQOsVlnxeB1NoLjxijzZfKA22MKOeTt6U5Qe7VmAe0qJpIN
        eSuJkN9ReWcpeJn8XuXulzR422rEj/CbrzKYgmM2fisNxGrNNbpO4zdiDYrBr5xstqViRLtVByGLCHdq
        YeXnmRF/fXaPDY8iw3z8LgkjBqLiBoxqM4J21PidaUyz8VvUKB+/DXlHJrhNwPjNKgv+WR9MfgfGDGkU
        3oYwC0H9MMZv/PnldHxm8lYjGZ6AMZAf0/hdVEIFi9tVjvw18Q0ulvPfzerx6mw4/hhVeNb+CTeVns2Q
        R97uvtKCi3Zv5hE81M9xVd5KgF6q+meLlLS8i86bTH0NFFoOhKEPMMbvL1nydsNiuEZ+b8W0aTYgqn8h
        k8fV5GrCGTCN39Coo8t0ALQi3QnWhI8fcv7biBS70PfI15i89ayQPOb53oAe8lpifxhnalIJaPsbrWYp
        U9oZguy3hrzBVM4cL7X9zVZ8hfzO9P3RphQxsjYN+9vezmpRJuTkChQvuUhyBkzldxEX43XJrDMOJIan
        2edDk/KWDxTy8LuwcqrztWrXOXf1AnFXlzbTONYLOLhpH/IbF3+WIWKgA+VQ4/61kN9WK2MAN/xrbRgy
        1AcGZGOGjiqMq1a85MNUfsNbklF0RhbkLZ9Ykt+8BiORIhf63rX8ziVvesTWkIiozkX254AAtzdR3xDw
        1Tk8Upa7jHbVV8ZcAQ75DbJJr1/pboFI3DYM+Y2c1AkWNiRKBQ850IW4H2UbxGQGwuruH6Fse28KpvOb
        FWJz4LMFTdIEo105myPH9pL2L1+H2+V3gX5V/SD0tZtTBL7StklDerJpR7EDhqrU2l0Je4BzCBDyG/ie
        Wr+0o/R5sXYy5Lca8uKgej0E17mYv5pfQfvIfosQyt2ePQUwDdfwG5oRKZ7uXDZLgy9SPzjlxbNs7nyj
        cvI2EimWgjxKefNJAPbjZvyGQRBeXKXgrMe+fNGg9NyGd6h1xHOm7ohIuJoyN11wt6EViQDHzCAx+I3I
        fhrBPbkeDspfZT1+yO+MNsU/XBcB+DJY/SE7gvaRJvDoRgbhCnBoH/l79GvlzShuB8FqsPqaR6D+Pp//
        FnnRA6FhRyIlUuBHIe/6x69fv/6L/bqhvAuemseBuIiQL7GVQAL0rMGNJetYKCLeSC9GIJPksE+7rFA8
        gLDYDHmDeZpm6u8pfQY0ePbYlDcKKgmJ0Hq4viXgNi6VSUAKyh4y4XU+mb4O5dGHA7by71FyXX8eQhkA
        1D/89HVbjojyu71ZwOVNm8eE2FzTuGF/DuipzhmASS9cSShB6doW35+NPcfCfvRV7wvseh1fnEc/6M4S
        iU86jP6cpbEdW55EfbHaiUGOp0Z/zuosbrXT8YWuMekEoIdK4UNkK7H+iX5oBD1zXFjR6ymK1ovcNtkM
        /FZHR7mqmTUufnmX8nWToRP3pLyhPxCa5U35DbKbaG7Bn4OGY+0l4IUcv6mKb7JYAGxvsdt6MSEcnUbH
        7BS8Qjv8hIu0+BOT3yyNvbqxiT51m62wj7H5aocIvyFG0DZ3EaLugWiALAAmfEiEu6IJwD0UbDbNXfqp
        57dXLWTvmfc6vOJ4Fhbaoan9WiZm5ze0vuRXUjNra5rfhrzlA4Xc8qZjsRJDAhPUKr8fl1ZgwPPrZ+XN
        yD66yNnl3aJpQFpkv8OUUYBH6+Va2F+obyMj/GZVUG2PV2QM/6xXDPO3JsK/GeE3y7Y2qrMV/GyXDv/t
        bvhtC3KUo4h2wq/wCN7olPhmHpS6/tmQ7ygGAjcYDgZBWE5SG5756pt8sdBwKnLwm1VCpAOk9J0dCZB2
        oe9dy+/8+2nSAeKTlzIFhC3baexe7f376vWE2OzLfJ0FcqQ1TDtiDT9/ghyy2/vSH1z2t/cmgXKDQ+hA
        Lt6K8ptlYdeu2v1us/vl/DXi7Uk+WZUL+qL8hgMOJlfb/ctBf9Rb13s+wslqaUew1+NKBn+CHbTeK/e7
        R/3K+S6yeZkQss0tSdbYvnMiNBTIqe72hnwyhxYGzYxv0TVy8BuKWD0wehvP3w0b2vXg7oRQ3vTm/GbJ
        heu/BfjXYIDYp9TsE0DFgUqE9pYD2mgQGPs2wE1HTf3G+M2AicMisBjyDgDZ2zL5GL8ZZAw7siU/tg3z
        zl+XIxMDlkWC8DoHZBsTuPQoVEIAEP6Yu+bO//jllz/a6X4FhTz8hsok52PoaCAedGcH/HOMaADjGL9H
        Pvr1+toRyNvaZL/OtJYij3PIGwS+C9RQKRinyAXUOB+8BcSK8mgAcVIXYN5JWcT5zY/JC0Q0/+L8jp3U
        Ba7K/oCDK+0pkfQFIuYuFrQf2wOcu2J7+3V/ze/tGwGTyMVvSN9BvYOxT0uXOy2+H8bsQKjGAC0z/BXB
        PPIGDfkkfacGA9BrRz0Z7eN43iag69cLzVP4nQK8+kmGT+V3CizbFDfkc1g1VZE4kB31zbojEskF5A3j
        1ErlP3/slz5PnU7Ix2/4w2zvIAa17Mc4pl2E98RO1fxC/IoFmEveUFX9z+aHmjo5dYIh93VsTx23oms3
        EQkGROOjEIPfTBFPhGYnZBWN3dVn4TdyGvEtQGhdjkzJ0FDn9n7ME+MdCeVSBgB5e1sn7rD/9p+lXvZS
        DkBOfjMgAXl1e5hT3qAJbAnNKRWYVCsJtxXttDJiIEJGMhBDyG+EMrZ4wE7km8qQ3zCEyV8xWM5J8ksV
        Wj+NclYDkeJW8g3Gm4Y6wOR9cu4OG7Weu5W12xxHbn7HLm4xwLzyBqk0z7H+mNfIAvSNoLYT30aXga7s
        VPk4EI2EneBdhHkhv8lwR/8fSOGR7cHdjggj5HfQ3TtmbUSE1llYQauf9j/hUXpQgyJFQ/MibRr79WhQ
        +qEVqCbI5F2+cNsHg2P6mrv5sjAHvxeF+eUNL1/ffolBHLq6GIhdvfqSZaDQtWGL7VQhY7Dwll07iW2g
        F8rbqbjjd5+ZkRfGAMX7c2S3LEDI7+NCofu6Cu3QiGHZaL2fIKsE9bcTGdi1vcOEz02ArnQ3WRMEMH1t
        rdjtdgrl4fT1Pg+I3/ntbxOef9ieBDbbmpDAnw0mzcfKoJDCbQWv9HYDib0MWYTAuag04w4LU94e9Ur/
        +Cg3S+QxyNcPiXmakN8gb0oHO61VXigWwQ4aw860LTW90sFHYmbw8SBRJAO00IF3hvCrIG9Q2svjZgVN
        333wcfCbg3quf1l5c/5u790vO5XLkif2SZgCiFHqjn5h2PkycFPCm/JmD6nr1vsiRrlfhxgimIGQ36vs
        ErKgg8orFuFN5dI3HL7poK7X/LLDg4+6pbQiRQDJFwb9Vz2mk3vN3nrr3/E5gRgexfgdgjlG2avz40yQ
        exdnRIjLm0HHkNdRRPgtwDc8hr8Zy8SDM8z4Cuyd5Q//2j1/HxG/F4E0eU9HjN8PDY+M37eNOeXNX0nz
        +yFhKe+peALyvjcs+/M7wJLfU7Hk9+Lw2Pi9HL+nB7iZv2UxuAm/v5H+/N6w5PcdYDl+T8Vy/F4clvr5
        HWDJ76lY8ntxWI7fd4Alv6fiJvz+NvpzKYR7AMZLfi8cMXn/+Ft0WZAmn3FaVADrxY+8DP99Jsv2APD4
        +P0rr2Ml7+9+eK6a5x0DW89/EEX4/aeHI3CvHPDPFwgJZvxfK92XaoPEh8jvZ38Tdazl/d0Pv724H/xV
        9OaA3/+88lBADy42BS76VN6bDu9ERti8kHceEH76r6ziUN7Qp98PZO4c//NwoMqSv0wP6S0UZP1G5L3E
        o8d33/0/OUfm+Gz89UAAAAAASUVORK5CYII=
</value>
  </data>
</root>